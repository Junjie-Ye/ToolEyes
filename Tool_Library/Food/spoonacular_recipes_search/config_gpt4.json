[{"name": "search_recipes", "description": "Search through thousands of recipes using advanced filtering and ranking. NOTE: This method combines searching by query, by ingredients, and by nutrients into one endpoint.", "parameters": {"type": "object", "properties": {"query": {"type": "string", "description": "The (natural language) recipe search query."}, "cuisine": {"type": "string", "description": "The cuisine(s) of the recipes. One or more, comma separated (will be interpreted as 'OR'). See a full list of supported cuisines."}, "excludeCuisine": {"type": "string", "description": "The cuisine(s) the recipes must not match. One or more, comma separated (will be interpreted as 'AND'). See a full list of supported cuisines."}, "diet": {"type": "string", "description": "The diet(s) for which the recipes must be suitable. You can specify multiple with comma meaning AND connection. You can specify multiple diets separated with a pipe | meaning OR connection. For example diet=gluten free,vegetarian means the recipes must be both, gluten free and vegetarian. If you specify diet=vegan|vegetarian, it means you want recipes that are vegan OR vegetarian. See a full list of supported diets."}, "intolerances": {"type": "string", "description": "A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full list of supported intolerances."}, "equipment": {"type": "string", "description": "The equipment required. Multiple values will be interpreted as 'or'. For example, value could be \"blender, frying pan, bowl\"."}, "includeIngredients": {"type": "string", "description": "A comma-separated list of ingredients that should/must be used in the recipes."}, "excludeIngredients": {"type": "string", "description": "A comma-separated list of ingredients or ingredient types that the recipes must not contain."}, "number": {"type": "string", "description": "The number of expected results (between 1 and 100)."}, "limitLicense": {"type": "string", "description": "Whether the recipes should have an open license that allows display with proper attribution."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["query"]}}, {"name": "search_recipes_by_nutrients", "description": "Find a set of recipes that adhere to the given nutritional limits. You may set limits for macronutrients (calories, protein, fat, and carbohydrate) and/or many micronutrients.", "parameters": {"type": "object", "properties": {"minCarbs": {"type": "string", "description": "The minimum amount of carbohydrates in grams the recipe must have per serving."}, "maxCarbs": {"type": "string", "description": "The maximum amount of carbohydrates in grams the recipe can have per serving."}, "minProtein": {"type": "string", "description": "The minimum amount of protein in grams the recipe must have per serving."}, "maxProtein": {"type": "string", "description": "The maximum amount of protein in grams the recipe must have per serving."}, "minCalories": {"type": "string", "description": "The minimum amount of calories the recipe must have per serving."}, "maxCalories": {"type": "string", "description": "The maximum amount of calories the recipe must have per serving."}, "minFat": {"type": "string", "description": "The minimum amount of fat in grams the recipe must have per serving."}, "maxFat": {"type": "string", "description": "The maximum amount of fat in grams the recipe must have per serving."}, "number": {"type": "string", "description": "The number of expected results (between 1 and 100)."}, "random": {"type": "string", "description": "If true, every request will give you a random set of recipes within the requested limits."}, "limitLicense": {"type": "string", "description": "Whether the recipes should have an open license that allows display with proper attribution."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "search_recipes_by_ingredients", "description": "Ever wondered what recipes you can cook with the ingredients you have in your fridge or pantry? This endpoint lets you find recipes that either maximize the usage of ingredients you have at hand (pre shopping) or minimize the ingredients that you don't currently have (post shopping). Find recipes that use as many of the given ingredients as possible and require as few additional ingredients as possible. This is a \"what's in your fridge\" API endpoint.", "parameters": {"type": "object", "properties": {"ingredients": {"type": "string", "description": "A comma-separated list of ingredients that the recipes should contain."}, "number": {"type": "string", "description": "The number of expected results (between 1 and 100)."}, "ranking": {"type": "string", "description": "Whether to maximize used ingredients (1) or minimize missing ingredients (2) first."}, "random": {"type": "string", "description": "If true, every request will give you a random set of recipes within the requested limits."}, "limitLicense": {"type": "string", "description": "Whether the recipes should have an open license that allows display with proper attribution."}, "ignorePantry": {"type": "string", "description": "Whether to ignore typical pantry items, such as water, salt, flour, etc."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["ingredients"]}}, {"name": "ask_to_user", "description": "You can ask user for guidance when you think you need more information to handle the task, but you should use this tool as less as you can.", "parameters": {"type": "object", "properties": {"question": {"type": "string", "description": "The question you want to ask to user."}}, "required": ["question"]}}, {"name": "finish", "description": "Finish the task and give your answer.", "parameters": {"type": "object", "properties": {"answer": {"type": "string", "description": "Your answer for the task."}}, "required": ["answer"]}}]