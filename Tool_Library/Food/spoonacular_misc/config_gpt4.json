[{"name": "search_all_food", "description": "Search all food content with one call. That includes recipes, grocery products, menu items, simple foods (ingredients), and food videos.", "parameters": {"type": "object", "properties": {"query": {"type": "string", "description": "The search query."}, "offset": {"type": "string", "description": "The number of results to skip (between 0 and 990)."}, "number": {"type": "string", "description": "The number of expected results (between 1 and 100)."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["query"]}}, {"name": "search_food_videos", "description": "Find recipe and other food related videos. This endpoint searches YouTube for relevant recipe or other food-related videos. Please be sure to read the YouTube Terms of Service before embedding videos into your site or app.", "parameters": {"type": "object", "properties": {"query": {"type": "string", "description": "The search query."}, "type": {"type": "string", "description": "The type of the recipes. See a full list of supported meal types."}, "cuisine": {"type": "string", "description": "The cuisine(s) of the recipes. One or more, comma separated. See a full list of supported cuisines."}, "diet": {"type": "string", "description": "The diet for which the recipes must be suitable. See a full list of supported diets."}, "includeIngredients": {"type": "string", "description": "A comma-separated list of ingredients that the recipes should contain."}, "excludeIngredients": {"type": "string", "description": "A comma-separated list of ingredients or ingredient types that the recipes must not contain."}, "minLength": {"type": "string", "description": "Minimum video length in seconds."}, "maxLength": {"type": "string", "description": "Maximum video length in seconds."}, "offset": {"type": "string", "description": "The number of results to skip (between 0 and 990)."}, "number": {"type": "string", "description": "The number of expected results (between 1 and 100)."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["query"]}}, {"name": "quick_answer", "description": "Answer a nutrition related natural language question.", "parameters": {"type": "object", "properties": {"q": {"type": "string", "description": "The nutrition related question."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["q"]}}, {"name": "detect_food_in_text", "description": "Take any text and find all mentions of food contained within it. This task is also called Named Entity Recognition (NER). In this case, the entities are foods. Either dishes, such as pizza or cheeseburger, or ingredients, such as cucumber or almonds.", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "The text in which food items, such as dish names and ingredients, should be detected in."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["text"]}}, {"name": "search_site_content", "description": "Search spoonacular's site content. You'll be able to find everything that you could also find using the search suggestions on spoonacular.com. This is a suggest API so you can send partial strings as queries.", "parameters": {"type": "object", "properties": {"query": {"type": "string", "description": "The query to search for. You can also use partial queries such as 'spagh' to already find spaghetti recipes, articles, grocery products, and other content."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["query"]}}, {"name": "random_food_joke", "description": "Get a random joke that is related to food. Caution: this is an endpoint for adults!", "parameters": {"type": "object", "properties": {"apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "random_food_trivia", "description": "Returns random food trivia.", "parameters": {"type": "object", "properties": {"apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "talk_to_chatbot", "description": "This endpoint can be used to have a conversation about food with the spoonacular chatbot. Use the 'Conversation Suggests' endpoint to show your user what he or she can say.", "parameters": {"type": "object", "properties": {"text": {"type": "string", "description": "The request / question / answer from the user to the chatbot."}, "contextId": {"type": "string", "description": "An arbitrary globally unique id for your conversation. The conversation can contain states so you should pass your context id if you want the bot to be able to remember the conversation."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["text"]}}, {"name": "conversation_suggests", "description": "This endpoint returns suggestions for things the user can say or ask the chatbot.", "parameters": {"type": "object", "properties": {"query": {"type": "string", "description": "A (partial) query from the user. The endpoint will return if it matches topics it can talk about."}, "number": {"type": "string", "description": "The number of suggestions to return (between 1 and 25)."}, "apiKey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["query"]}}, {"name": "ask_to_user", "description": "You can ask user for guidance when you think you need more information to handle the task, but you should use this tool as less as you can.", "parameters": {"type": "object", "properties": {"question": {"type": "string", "description": "The question you want to ask to user."}}, "required": ["question"]}}, {"name": "finish", "description": "Finish the task and give your answer.", "parameters": {"type": "object", "properties": {"answer": {"type": "string", "description": "Your answer for the task."}}, "required": ["answer"]}}]