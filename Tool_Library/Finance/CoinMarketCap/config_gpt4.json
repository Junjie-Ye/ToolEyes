[{"name": "get_cryptocurrency_categories", "description": "Returns information about all coin categories available on CoinMarketCap. Includes a paginated list of cryptocurrency quotes and metadata from each category.", "parameters": {"type": "object", "properties": {"start": {"type": "string", "description": "integer >= 1 ,Default: 1 Optionally offset the start (1-based index) of the paginated list of items to return."}, "limit": {"type": "string", "description": "integer [ 1 .. 5000 ] Optionally specify the number of results to return. Use this parameter and the 'start' parameter to determine your own pagination size."}, "id": {"type": "string", "description": "Filtered categories by one or more comma-separated cryptocurrency CoinMarketCap IDs. Example: 1,2."}, "slug": {"type": "string", "description": "Alternatively filter categories by a comma-separated list of cryptocurrency slugs. Example: 'bitcoin,ethereum'."}, "symbol": {"type": "string", "description": "Alternatively filter categories one or more comma-separated cryptocurrency symbols. Example: 'BTC,ETH'."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "get_cryptocurrency_category", "description": "Returns information about a single coin category available on CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and metadata for the category.", "parameters": {"type": "object", "properties": {"start": {"type": "string", "description": "integer >= 1 ,Default: 1 Optionally offset the start (1-based index) of the paginated list of items to return."}, "limit": {"type": "string", "description": "integer [ 1 .. 5000 ] Optionally specify the number of results to return. Use this parameter and the 'start' parameter to determine your own pagination size."}, "id": {"type": "string", "description": "Filtered categories by one or more comma-separated cryptocurrency CoinMarketCap IDs. Example: 1,2."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": ["id"]}}, {"name": "get_cryptocurrency_coinmarketcap_id_map", "description": "Returns information about a single coin category available on CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and metadata for the category.", "parameters": {"type": "object", "properties": {"start": {"type": "string", "description": "integer >= 1 ,Default: 1 Optionally offset the start (1-based index) of the paginated list of items to return."}, "limit": {"type": "string", "description": "integer [ 1 .. 5000 ] Optionally specify the number of results to return. Use this parameter and the 'start' parameter to determine your own pagination size."}, "symbol": {"type": "string", "description": "Optionally pass a comma-separated list of cryptocurrency symbols to return CoinMarketCap IDs for. If this option is passed, other options will be ignored."}, "listing_status": {"type": "string", "description": "Only active cryptocurrencies are returned by default. Pass 'inactive' to get a list of cryptocurrencies that are no longer active. Pass 'untracked' to get a list of cryptocurrencies that are listed but do not yet meet methodology requirements to have tracked markets available. You may pass one or more comma-separated values. Default: 'active'."}, "aux": {"type": "string", "description": "Default:'platform,first_historical_data,last_historical_data,is_active' Optionally specify a comma-separated list of supplemental data fields to return. Pass platform,first_historical_data,last_historical_data,is_active,status to include all auxiliary fields."}, "if_sort_by_id": {"type": "string", "description": "True: 'id'; False: 'cmc_rank'. Default: True."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "get_cryptocurrency_metadata_v2", "description": "Returns information about a single coin category available on CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and metadata for the category.", "parameters": {"type": "object", "properties": {"id": {"type": "string", "description": "One or more comma-separated CoinMarketCap cryptocurrency IDs. Example: '1,2'."}, "slug": {"type": "string", "description": "Alternatively pass a comma-separated list of cryptocurrency slugs. Example: 'bitcoin,ethereum'."}, "symbol": {"type": "string", "description": "Alternatively pass one or more comma-separated cryptocurrency symbols. Example: 'BTC,ETH'. At least one 'id' or 'slug' or 'symbol' is required for this request. Please note that starting in the v2 endpoint, due to the fact that a symbol is not unique, if you request by symbol each data response will contain an array of objects containing all of the coins that use each requested symbol. The v1 endpoint will still return a single object, the highest ranked coin using that symbol."}, "address": {"type": "string", "description": "Alternatively pass in a contract address. Example: '0xc40af1e4fecfa05ce6bab79dcd8b373d2e436c4e'"}, "aux": {"type": "string", "description": "Default:'urls,logo,description,tags,platform,date_added,notice' Optionally specify a comma-separated list of supplemental data fields to return. Pass urls,logo,description,tags,platform,date_added,notice,status to include all auxiliary fields."}, "skip_invalid": {"type": "string", "description": "Pass true to relax request validation rules. When requesting records on multiple cryptocurrencies an error is returned if any invalid cryptocurrencies are requested or a cryptocurrency does not have matching records in the requested timeframe. If set to true, invalid lookups will be skipped allowing valid cryptocurrencies to still be returned. Default: false."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "get_cryptocurrency_listing_latest", "description": "Returns information about a single coin category available on CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and metadata for the category.", "parameters": {"type": "object", "properties": {"start": {"type": "string", "description": "Optionally offset the start (1-based index) of the paginated list of items to return. Integer>=1 , Default: 1."}, "limit": {"type": "string", "description": "Optionally specify the number of results to return. Use this parameter and the 'start' parameter to determine your own pagination size. Integer:[1,5000]; Default: 100."}, "price_min": {"type": "string", "description": "Optionally specify a threshold of minimum USD price to filter results by. Number between [ 0 .. 100000000000000000 ]."}, "prive_max": {"type": "string", "description": "Optionally specify a threshold of maximum USD price to filter results by. Number between [ 0 .. 100000000000000000 ]."}, "market_cap_min": {"type": "string", "description": "Optionally specify a threshold of minimum market cap to filter results by. Number between [ 0 .. 100000000000000000 ]."}, "market_cap_max": {"type": "string", "description": "Optionally specify a threshold of maximum market cap to filter results by. Number between [ 0 .. 100000000000000000 ]."}, "volume_24h_min": {"type": "string", "description": "Optionally specify a threshold of minimum 24 hour USD volume to filter results by. Number between [ 0 .. 100000000000000000 ]."}, "volume_24h_max": {"type": "string", "description": "Optionally specify a threshold of maximum 24 hour USD volume to filter results by. Number between [ 0 .. 100000000000000000 ]."}, "circulating_supply_min": {"type": "string", "description": "Optionally specify a threshold of minimum circulating supply to filter results by. Number between [ 0 .. 100000000000000000 ]."}, "circulating_supply_max": {"type": "string", "description": "Optionally specify a threshold of maximum circulating supply to filter results by. Number between [ 0 .. 100000000000000000 ]."}, "percent_change_24h_min": {"type": "string", "description": "Optionally specify a threshold of minimum 24 hour percent change to filter results by. Number >=-100 ."}, "percent_change_24h_max": {"type": "string", "description": "Optionally specify a threshold of maximum 24 hour percent change to filter results by. Number >=-100 ."}, "sort": {"type": "string", "description": "Default: 'market_cap'. Valid values: 'name''symbol''date_added''market_cap''market_cap_strict''price''circulating_supply''total_supply''max_supply''num_market_pairs''volume_24h''percent_change_1h''percent_change_24h''percent_change_7d''market_cap_by_total_supply_strict''volume_7d''volume_30d' What field to sort the list of cryptocurrencies by."}, "if_sort_asc": {"type": "string", "description": "True: sort by asc; False: sort by desc. Default: False."}, "cryptocurrency_type": {"type": "string", "description": "Default: 'all' Valid values: 'all''coins''tokens' The type of cryptocurrency to include."}, "tag": {"type": "string", "description": "Default: 'all' Valid values: 'all''defi''filesharing' The tag of cryptocurrency to include."}, "aux": {"type": "string", "description": "Default:'urls,logo,description,tags,platform,date_added,notice' Optionally specify a comma-separated list of supplemental data fields to return. Pass urls,logo,description,tags,platform,date_added,notice,status to include all auxiliary fields."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "get_cryptocurrency_quotes_latest_v2", "description": "Returns information about a single coin category available on CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and metadata for the category.", "parameters": {"type": "object", "properties": {"id": {"type": "string", "description": "One or more comma-separated cryptocurrency CoinMarketCap IDs. Example: 1,2."}, "slug": {"type": "string", "description": "Alternatively pass a comma-separated list of cryptocurrency slugs. Example: 'bitcoin,ethereum'."}, "symbol": {"type": "string", "description": "Alternatively pass one or more comma-separated cryptocurrency symbols. Example: 'BTC,ETH'. At least one 'id' or 'slug' or 'symbol' is required for this request."}, "skip_invalid": {"type": "string", "description": "Default: True. Pass 'True' to relax request validation rules. When requesting records on multiple cryptocurrencies an error is returned if no match is found for 1 or more requested cryptocurrencies. If set to True, invalid lookups will be skipped allowing valid cryptocurrencies to still be returned."}, "aux": {"type": "string", "description": "Default: 'num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply,is_active,is_fiat' Optionally specify a comma-separated list of supplemental data fields to return. Pass num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply,market_cap_by_total_supply,volume_24h_reported,volume_7d,volume_7d_reported,volume_30d,volume_30d_reported,is_active,is_fiat to include all auxiliary fields."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "get_coinmarketmap_id_map_fiat", "description": "Returns information about a single coin category available on CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and metadata for the category.", "parameters": {"type": "object", "properties": {"start": {"type": "string", "description": "integer >= 1 ,Default: 1 Optionally offset the start (1-based index) of the paginated list of items to return."}, "limit": {"type": "string", "description": "integer [ 1 .. 5000 ] Optionally specify the number of results to return. Use this parameter and the 'start' parameter to determine your own pagination size."}, "if_sort_by_id": {"type": "string", "description": "Default: True. True: sort by 'id'; False: sort by 'name'."}, "include_metals": {"type": "string", "description": "Default: False. Pass true to include precious metals."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "get_exchange_assets", "description": "Returns information about a single coin category available on CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and metadata for the category.", "parameters": {"type": "object", "properties": {"id": {"type": "string", "description": "A CoinMarketCap exchange ID. Example: 270."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "get_exchange_metadata", "description": "Returns information about a single coin category available on CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and metadata for the category.", "parameters": {"type": "object", "properties": {"id": {"type": "string", "description": "A CoinMarketCap exchange ID. Example: 270."}, "slug": {"type": "string", "description": "Alternatively, one or more comma-separated exchange names in URL friendly shorthand 'slug' format (all lowercase, spaces replaced with hyphens). Example: 'binance,gdax'. At least one 'id' or 'slug' is required."}, "aux": {"type": "string", "description": "Default: 'urls,logo,description,date_launched,notice' Optionally specify a comma-separated list of supplemental data fields to return. Pass urls,logo,description,date_launched,notice,status to include all auxiliary fields."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "get_coinmarketmap_id_map_exchange", "description": "Returns information about a single coin category available on CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and metadata for the category.", "parameters": {"type": "object", "properties": {"start": {"type": "string", "description": "integer >= 1 ,Default: 1 Optionally offset the start (1-based index) of the paginated list of items to return."}, "limit": {"type": "string", "description": "integer [ 1 .. 5000 ] Optionally specify the number of results to return. Use this parameter and the 'start' parameter to determine your own pagination size."}, "slug": {"type": "string", "description": "Optionally pass a comma-separated list of exchange slugs (lowercase URL friendly shorthand name with spaces replaced with dashes) to return CoinMarketCap IDs for. If this option is passed, other options will be ignored."}, "listing_status": {"type": "string", "description": "Only active cryptocurrencies are returned by default. Pass 'inactive' to get a list of cryptocurrencies that are no longer active. Pass 'untracked' to get a list of cryptocurrencies that are listed but do not yet meet methodology requirements to have tracked markets available. You may pass one or more comma-separated values. Default: 'active'."}, "crypto_id": {"type": "string", "description": "Optionally include one fiat or cryptocurrency IDs to filter market pairs by. For example '?crypto_id=1' would only return exchanges that have BTC."}, "aux": {"type": "string", "description": "Default:'platform,first_historical_data,last_historical_data,is_active' Optionally specify a comma-separated list of supplemental data fields to return. Pass platform,first_historical_data,last_historical_data,is_active,status to include all auxiliary fields."}, "if_sort_by_id": {"type": "string", "description": "True: 'id'; False: 'cmc_rank'. Default: True."}, "apikey": {"type": "string", "description": "API-KEY required to access this information."}}, "required": []}}, {"name": "ask_to_user", "description": "You can ask user for guidance when you think you need more information to handle the task, but you should use this tool as less as you can.", "parameters": {"type": "object", "properties": {"question": {"type": "string", "description": "The question you want to ask to user."}}, "required": ["question"]}}, {"name": "finish", "description": "Finish the task and give your answer.", "parameters": {"type": "object", "properties": {"answer": {"type": "string", "description": "Your answer for the task."}}, "required": ["answer"]}}]