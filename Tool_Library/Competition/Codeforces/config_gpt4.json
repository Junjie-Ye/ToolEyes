[{"name": "blog_entry_comments", "description": "Returns a list of comments to the specified blog entry in the Codeforces Website.", "parameters": {"type": "object", "properties": {"blog_entry_id": {"type": "string", "description": "Id of the blog entry."}}, "required": ["blog_entry_id"]}}, {"name": "blog_entry_view", "description": "Returns blog entry in the Codeforces Website.", "parameters": {"type": "object", "properties": {"blog_entry_id": {"type": "string", "description": "Id of the blog entry."}}, "required": ["blog_entry_id"]}}, {"name": "contest_hacks", "description": "Returns list of hacks in the specified contests in the Codeforces Website.", "parameters": {"type": "object", "properties": {"contest_id": {"type": "string", "description": "Id of the contest."}, "as_manager": {"type": "string", "description": "Boolean. If set to true, the response will contain information available to contest managers. Otherwise, the response will contain only the information available to the participants."}}, "required": ["contest_id"]}}, {"name": "contest_list", "description": "Returns information about all available contests in the Codeforces Website.", "parameters": {"type": "object", "properties": {"gym": {"type": "string", "description": "If true — than gym contests are returned. Otherwise, regular contests are returned."}}, "required": []}}, {"name": "contest_rating_changes", "description": "Returns rating changes after the contest in the Codeforces Website.", "parameters": {"type": "object", "properties": {"contest_id": {"type": "string", "description": "Id of the contest."}}, "required": ["contest_id"]}}, {"name": "contest_standings", "description": "Returns the description of the contest and the requested part of the standings in the Codeforces Website.", "parameters": {"type": "object", "properties": {"contest_id": {"type": "string", "description": "Id of the contest."}, "as_manager": {"type": "string", "description": "Boolean. If set to true, the response will contain information available to contest managers. Otherwise, the response will contain only the information available to the participants."}, "from_id": {"type": "string", "description": "1-based index of the standings row to start the ranklist."}, "count": {"type": "string", "description": "Number of standing rows to return."}, "handles": {"type": "string", "description": "Semicolon-separated list of handles. No more than 10000 handles is accepted."}, "room": {"type": "string", "description": "If specified, than only participants from this room will be shown in the result. If not — all the participants will be shown."}, "show_unofficial": {"type": "string", "description": "If true than all participants (virtual, out of competition) are shown. Otherwise, only official contestants are shown."}}, "required": ["contest_id"]}}, {"name": "contest_status", "description": "Returns list of hacks in the specified contests in the Codeforces Website.", "parameters": {"type": "object", "properties": {"contest_id": {"type": "string", "description": "Id of the contest."}, "as_manager": {"type": "string", "description": "Boolean. If set to true, the response will contain information available to contest managers. Otherwise, the response will contain only the information available to the participants."}, "handle": {"type": "string", "description": "Codeforces user handle."}, "from": {"type": "string", "description": "1-based index of the first submission to return."}, "count": {"type": "string", "description": "Number of returned submissions."}}, "required": ["contest_id"]}}, {"name": "problem_set_problems", "description": "Returns list of hacks in the specified contests in the Codeforces Website.", "parameters": {"type": "object", "properties": {"tags": {"type": "string", "description": "Semicilon-separated list of tags."}, "problem_set_name": {"type": "string", "description": "Custom problemset's short name, like 'acmsguru'"}}, "required": ["tags"]}}, {"name": "problem_set_recent_status", "description": "Returns list of hacks in the specified contests in the Codeforces Website.", "parameters": {"type": "object", "properties": {"count": {"type": "string", "description": "Number of submissions to return."}, "problem_set_name": {"type": "string", "description": "Custom problemset's short name, like 'acmsguru'"}}, "required": ["count"]}}, {"name": "recent_actions", "description": "Returns recent actions in the Codeforces Website.", "parameters": {"type": "object", "properties": {"max_count": {"type": "string", "description": "Number of recent actions to return. Can be up to 100."}}, "required": ["max_count"]}}, {"name": "user_blog_entries", "description": "Returns a list of all user's blog entries in the Codeforces Website.", "parameters": {"type": "object", "properties": {"handle": {"type": "string", "description": "Codeforces user handle."}}, "required": ["handle"]}}, {"name": "user_friends", "description": "Returns authorized user's friends. Using this method requires authorization in the Codeforces Website.", "parameters": {"type": "object", "properties": {"only_online": {"type": "string", "description": "If true — only online friends are returned. Otherwise, all friends are returned."}}, "required": []}}, {"name": "user_info", "description": "Returns information about one or several users in the Codeforces Website.", "parameters": {"type": "object", "properties": {"handle": {"type": "string", "description": "Semicolon-separated list of handles. No more than 10000 handles is accepted."}}, "required": ["handle"]}}, {"name": "user_rated_list", "description": "Returns the list users who have participated in at least one rated contest in the Codeforces Website.", "parameters": {"type": "object", "properties": {"active_only": {"type": "string", "description": "If true then only users, who participated in rated contest during the last month are returned. Otherwise, all users with at least one rated contest are returned."}, "include_retired": {"type": "string", "description": "If true, the method returns all rated users, otherwise the method returns only users, that were online at last month."}, "contest_id": {"type": "string", "description": "Id of the contest."}}, "required": []}}, {"name": "user_rating", "description": "Returns rating history of the specified user in the Codeforces Website.", "parameters": {"type": "object", "properties": {"handle": {"type": "string", "description": "Codeforces user handle."}}, "required": ["handle"]}}, {"name": "user_status", "description": "Returns submissions of specified user in the Codeforces Website.", "parameters": {"type": "object", "properties": {"handle": {"type": "string", "description": "Codeforces user handle."}, "from_id": {"type": "string", "description": "1-based index of the first submission to return."}, "count": {"type": "string", "description": "Number of returned submissions."}}, "required": ["handle"]}}, {"name": "ask_to_user", "description": "You can ask user for guidance when you think you need more information to handle the task, but you should use this tool as less as you can.", "parameters": {"type": "object", "properties": {"question": {"type": "string", "description": "The question you want to ask to user."}}, "required": ["question"]}}, {"name": "finish", "description": "Finish the task and give your answer.", "parameters": {"type": "object", "properties": {"answer": {"type": "string", "description": "Your answer for the task."}}, "required": ["answer"]}}]